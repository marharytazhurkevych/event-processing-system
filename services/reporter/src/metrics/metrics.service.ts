import { Injectable } from '@nestjs/common';
import { Counter, Histogram, register } from 'prom-client';

@Injectable()
export class MetricsService {
  private readonly processedEventsCounter: Counter<string>;
  private readonly failedEventsCounter: Counter<string>;
  private readonly processingTimeHistogram: Histogram<string>;

  constructor() {
    this.processedEventsCounter = new Counter({
      name: 'reporter_reports_generated_total',
      help: 'Total number of reports generated by reporter service',
      labelNames: ['report_type'],
      registers: [register],
    });

    this.failedEventsCounter = new Counter({
      name: 'reporter_reports_failed_total',
      help: 'Total number of reports that failed generation in reporter service',
      labelNames: ['report_type'],
      registers: [register],
    });

    this.processingTimeHistogram = new Histogram({
      name: 'reporter_report_generation_duration_seconds',
      help: 'Time spent generating reports in reporter service',
      labelNames: ['report_type'],
      buckets: [0.001, 0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10],
      registers: [register],
    });
  }

  recordReportGenerated(reportType: string): void {
    this.processedEventsCounter.inc({ report_type: reportType });
  }

  recordReportFailed(reportType: string): void {
    this.failedEventsCounter.inc({ report_type: reportType });
  }

  recordReportGenerationTime(reportType: string, duration: number): void {
    this.processingTimeHistogram.observe({ report_type: reportType }, duration);
  }
}
